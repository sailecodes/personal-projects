{"mappings":"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","sources":["<anon>","src/js/controller.js","src/js/model.js","src/js/config.js","src/js/views/searchBarView.js","src/js/views/spotlightContentView.js","src/js/views/spotlightSliderView.js","src/js/views/spotlightOverviewView.js"],"sourcesContent":["/////////////////////////////////////////////////\n// CONTROLLER of the MVC architecture\n//\n// Description: Controls data flow between the model and different views\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// MODEL of the MVC architecture\n//\n// Description: Fetches data from and posts data to the API\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n///////// API\nconst $ba30e20475feac5a$export$a9861bd62f48e142 = \"40d476b7bf5ff2313ce9a96c31065e66\";\nconst $ba30e20475feac5a$export$8087c223580a2ee9 = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MGQ0NzZiN2JmNWZmMjMxM2NlOWE5NmMzMTA2NWU2NiIsInN1YiI6IjY1MTIyNTYzMjZkYWMxMDE0ZTIzMzM4OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ol_KoRpPN_9jMnmWMVoAklqxoxIvq9uRoKatzqDiTXY\";\nconst $ba30e20475feac5a$export$8eb3892b442747bd = {\n    method: \"GET\",\n    headers: {\n        accept: \"application/json\",\n        Authorization: `Bearer ${$ba30e20475feac5a$export$8087c223580a2ee9}`\n    }\n};\nconst $ba30e20475feac5a$export$ca6dda5263526f75 = \"https://api.themoviedb.org/3\";\nconst $ba30e20475feac5a$export$639dfecbd7ea1068 = \"https://image.tmdb.org/t/p\";\nconst $ba30e20475feac5a$export$60d935edfcb03167 = \"original\";\nconst $ba30e20475feac5a$export$c18f3141357d2f6a = 3;\nconst $ba30e20475feac5a$export$645e11f38f6e5666 = 9;\nconst $ba30e20475feac5a$export$5a2750a4dbd9e24e = 305;\nconst $ba30e20475feac5a$export$4523a2f9c97b897b = 112; // TODO: Ratio should be changed so larger --> slower, smaller --> faster\nconst $ba30e20475feac5a$export$759badfb1342d135 = 2000;\nconst $ba30e20475feac5a$export$a1cb696860e96a96 = [\n    \"adventure\",\n    \"action\",\n    \"drama\",\n    \"romance\"\n];\n\n\nconst $0f1d4402dffacf5b$export$ca000e230c0caa3e = {\n    movieGenresInfo: [],\n    tvsGenresInfo: [],\n    mostPopularMoviesInfo: [],\n    movieSpotlightInfo: [],\n    topRatedMoviesInfo: [],\n    moviesByGenreInfo: [],\n    movieTracksInfo: []\n};\nconst $0f1d4402dffacf5b$export$d5d584b681d631b7 = function(movieGenresId) {\n    const movieGenresStr = [];\n    let counter = 0;\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.movieGenresInfo.every((movieGenre)=>{\n        if (movieGenresId.some((genreId)=>genreId === movieGenre.id)) {\n            movieGenresStr.push(movieGenre.name);\n            counter++;\n        }\n        if (counter === movieGenresId.length) return false;\n        return true;\n    });\n    return movieGenresStr;\n};\nconst $0f1d4402dffacf5b$export$1e0dc2f81cf0c7c8 = function(movieGenresStr) {\n    const movieGenresId = [];\n    let counter = 0;\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.movieGenresInfo.every((movieGenre)=>{\n        if (movieGenresStr.some((genreStr)=>genreStr.toLowerCase() === movieGenre.name.toLowerCase())) {\n            movieGenresId.push(movieGenre.id);\n            counter++;\n        }\n        if (counter === movieGenresStr.length) return false;\n        return true;\n    });\n    return movieGenresId;\n};\nconst $0f1d4402dffacf5b$var$getMoviesByGenreURL = function(genreId) {\n    return `${0, $ba30e20475feac5a$export$ca6dda5263526f75}/discover/movie`.concat(`?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`).concat(`&with_genres=${genreId}`);\n};\nconst $0f1d4402dffacf5b$export$8bebce24411c8fc2 = async function() {\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.movieGenresInfo.length !== 0) return;\n    try {\n        const response = await fetch(`${(0, $ba30e20475feac5a$export$ca6dda5263526f75)}/genre/movie/list?language=en`, (0, $ba30e20475feac5a$export$8eb3892b442747bd));\n        const { genres: genres } = await response.json();\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.movieGenresInfo = genres;\n    } catch (err) {\n        console.error(`(model.js::fetchMovieGenres()) ${err}`);\n        throw err;\n    }\n};\nconst $0f1d4402dffacf5b$export$4e904f350c2cabd = async function(page) {\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.mostPopularMoviesInfo.length !== 0) return;\n    try {\n        const response = await fetch(`${(0, $ba30e20475feac5a$export$ca6dda5263526f75)}/movie/popular/?language=en-US&page=${page}`, (0, $ba30e20475feac5a$export$8eb3892b442747bd));\n        const mostPopularMovies = await response.json();\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.mostPopularMoviesInfo.push({\n            mostPopularMovies: mostPopularMovies.results,\n            page: mostPopularMovies.page\n        });\n    } catch (err) {\n        console.error(`(model.js::fetchPopularMovies()) ${err}`);\n        throw err;\n    }\n};\nconst $0f1d4402dffacf5b$export$1ec647452c5fd561 = async function(page) {\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.topRatedMoviesInfo.length !== 0) return;\n    try {\n        const response = await fetch(`${(0, $ba30e20475feac5a$export$ca6dda5263526f75)}/movie/top_rated?language=en-US&page=${page}`, (0, $ba30e20475feac5a$export$8eb3892b442747bd));\n        const topRatedMovies = await response.json();\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.topRatedMoviesInfo.push({\n            topRatedMovies: topRatedMovies.results,\n            page: topRatedMovies.page\n        });\n    } catch (err) {\n        console.error(`(model.js::fetchTopRatedMovies()) ${err}`);\n        throw err;\n    }\n};\nconst $0f1d4402dffacf5b$export$e4bb840dce7a48f9 = async function() {\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo.length !== 0) return;\n    const movieGenresId = $0f1d4402dffacf5b$export$1e0dc2f81cf0c7c8((0, $ba30e20475feac5a$export$a1cb696860e96a96));\n    try {\n        const response = await Promise.all([\n            fetch($0f1d4402dffacf5b$var$getMoviesByGenreURL(movieGenresId[0]), (0, $ba30e20475feac5a$export$8eb3892b442747bd)),\n            fetch($0f1d4402dffacf5b$var$getMoviesByGenreURL(movieGenresId[1]), (0, $ba30e20475feac5a$export$8eb3892b442747bd)),\n            fetch($0f1d4402dffacf5b$var$getMoviesByGenreURL(movieGenresId[2]), (0, $ba30e20475feac5a$export$8eb3892b442747bd)),\n            fetch($0f1d4402dffacf5b$var$getMoviesByGenreURL(movieGenresId[3]), (0, $ba30e20475feac5a$export$8eb3892b442747bd))\n        ]);\n        const moviesByGenre = await Promise.all([\n            response[0].json(),\n            response[1].json(),\n            response[2].json(),\n            response[3].json()\n        ]);\n        moviesByGenre.forEach((result, index)=>{\n            $0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo.push({\n                genreId: movieGenresId[index],\n                results: {\n                    page: result.page,\n                    movies: result.results\n                }\n            });\n        });\n    } catch (err) {\n        console.error(`(model.js::fetchMoviesByGenre()) ${err}`);\n        throw err;\n    }\n};\nconst $0f1d4402dffacf5b$export$45dbabef412e43eb = function() {\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.mostPopularMoviesInfo.length === 0) return;\n    const mostPopularMovies = $0f1d4402dffacf5b$export$ca000e230c0caa3e.mostPopularMoviesInfo[0].mostPopularMovies;\n    for(let i = 0; i < (0, $ba30e20475feac5a$export$c18f3141357d2f6a) * (0, $ba30e20475feac5a$export$645e11f38f6e5666); i += (0, $ba30e20475feac5a$export$645e11f38f6e5666)){\n        let entry = {};\n        entry.id = mostPopularMovies[i].id;\n        entry.title = mostPopularMovies[i].title;\n        entry.releaseDate = mostPopularMovies[i].release_date;\n        try {\n            entry.genres = $0f1d4402dffacf5b$export$d5d584b681d631b7(mostPopularMovies[i].genre_ids);\n        } catch (err) {\n            console.error(`(module.js::determineMovieSpotlight()) ${err}`);\n            throw err;\n        }\n        entry.description = mostPopularMovies[i].overview;\n        entry.rating = mostPopularMovies[i].vote_average;\n        entry.backdropPath = `${0, $ba30e20475feac5a$export$639dfecbd7ea1068}/${0, $ba30e20475feac5a$export$60d935edfcb03167}${mostPopularMovies[i].backdrop_path}`;\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.movieSpotlightInfo.push(entry);\n    }\n};\nconst $0f1d4402dffacf5b$export$54e5b5bd39b67989 = function() {\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.movieTracksInfo.push($0f1d4402dffacf5b$export$ca000e230c0caa3e.topRatedMoviesInfo[0].topRatedMovies.slice(0, 10));\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.movieTracksInfo.push([\n        {\n            genreId: $0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo[0].genreId,\n            movies: $0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo[0].results.movies.slice(0, 10)\n        }\n    ], [\n        {\n            genreId: $0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo[1].genreId,\n            movies: $0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo[1].results.movies.slice(0, 10)\n        }\n    ], [\n        {\n            genreId: $0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo[2].genreId,\n            movies: $0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo[2].results.movies.slice(0, 10)\n        }\n    ], [\n        {\n            genreId: $0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo[3].genreId,\n            movies: $0f1d4402dffacf5b$export$ca000e230c0caa3e.moviesByGenreInfo[3].results.movies.slice(0, 10)\n        }\n    ]);\n};\nconst $0f1d4402dffacf5b$export$3a9657ccf1f93ea3 = async function() {\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.tvsGenresInfo.length !== 0) return;\n    const response = await fetch(`${(0, $ba30e20475feac5a$export$ca6dda5263526f75)}/genre/tv/list?language=en`, (0, $ba30e20475feac5a$export$8eb3892b442747bd));\n    const { genres: genres } = await response.json();\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.tvsGenresInfo = genres;\n};\n\n\nclass $0d13d069d85dae3d$var$SearchBarView {\n    #searchContainer = document.querySelector(\".nav-bar--search\");\n    #searchBar = document.querySelector(\".nav-bar--search-bar\");\n    #searchBarBtn = document.querySelector(\".nav-bar--search-bar-btn\");\n    initHandlers() {\n        this.#addSearchHandler();\n        this.#addSearchBarHandler();\n    }\n    // TODO: Use input for search functionality\n    #addSearchHandler() {\n        this.#searchContainer.addEventListener(\"submit\", (e)=>{\n            e.preventDefault();\n            console.log(this.#searchBar.value);\n            if (this.#searchBar.value === \"\") return;\n            this.#searchBar.value = \"\";\n        });\n    }\n    #addSearchBarHandler() {\n        this.#searchBarBtn.addEventListener(\"mouseenter\", ()=>{\n            this.#changeSearchBarStyle(true);\n            this.#searchContainer.addEventListener(\"mouseleave\", this.#changeSearchBarStyle.bind(this, false));\n        });\n    }\n    #changeSearchBarStyle(flag) {\n        this.#searchBar.style.width = flag ? \"36rem\" : \"0rem\";\n        this.#searchBar.style.padding = flag ? \"0 1rem 0 1rem\" : \"0rem\";\n    }\n}\nvar $0d13d069d85dae3d$export$2e2bcd8739ae039 = new $0d13d069d85dae3d$var$SearchBarView();\n\n\nclass $854894b32fbd3b72$var$SpotlightContentView {\n    #spotlightContent;\n    #slider;\n    initVars(spotlightContent) {\n        this.#spotlightContent = spotlightContent;\n        this.#slider = document.querySelector(\".content-spotlight--slider\");\n    }\n    initDefaultState() {\n        this.#spotlightContent.forEach((content)=>{\n            this.#slider.insertAdjacentHTML(\"beforeend\", `<div class=\"content-spotlight--main-content\">\r\n          <img class=\"content-spotlight--backdrop\" src=\"${content.backdropPath}\" />\r\n          <div class=\"content-spotlight--text-container\">  \r\n            <p class=\"content-spotlight--title\">${content.title}</p>\r\n            <div class=\"content-spotlight--more-container\">\r\n              <p class=\"content-spotlight--more\">Read description</p>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke-width=\"1.5\"\r\n                stroke=\"currentColor\"\r\n                class=\"content-spotlight--more-icon\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>`);\n        });\n    }\n}\nvar $854894b32fbd3b72$export$2e2bcd8739ae039 = new $854894b32fbd3b72$var$SpotlightContentView();\n\n\nclass $a9545333b1580a57$var$SpotlightSliderView {\n    #spotlightBtn;\n    #sliderElements;\n    #sliderMaxElements;\n    #currentSlide = 0;\n    #markerContainer;\n    initVars() {\n        this.#spotlightBtn = document.querySelectorAll(\".content-spotlight--btn\");\n        this.#sliderElements = document.querySelectorAll(\".content-spotlight--main-content\");\n        this.#sliderMaxElements = this.#sliderElements.length;\n        this.#markerContainer = document.querySelector(\".content-spotlight--markers\");\n    }\n    initDefaultState() {\n        this.#initMarkers();\n        this.#activateMarkers(0);\n        this.#transitionNextSlide(0);\n    }\n    #initMarkers() {\n        this.#sliderElements.forEach((_, index)=>{\n            this.#markerContainer.insertAdjacentHTML(\"beforeend\", `<div class=\"content-spotlight--marker content-spotlight--marker-${index}\" data-slide=${index}></div>`);\n        });\n    }\n    initHandlers() {\n        this.addTransitionByBtnHandler();\n        this.addTransitionByKeyHandler();\n        this.addTransitionByMarkerHandler();\n        this.addBtnHoverShadowHandler();\n    }\n    addTransitionByBtnHandler() {\n        this.#spotlightBtn.forEach((button)=>{\n            button.addEventListener(\"click\", (e)=>{\n                if (e.currentTarget.classList.contains(\"content-spotlight--left-btn\")) this.#prevSlide();\n                else if (e.currentTarget.classList.contains(\"content-spotlight--right-btn\")) this.#nextSlide();\n            });\n        });\n    }\n    addTransitionByKeyHandler() {\n        document.addEventListener(\"keydown\", (e)=>{\n            if (e.key === \"ArrowLeft\") this.#prevSlide();\n            else if (e.key === \"ArrowRight\") this.#nextSlide();\n        });\n    }\n    addTransitionByMarkerHandler() {\n        this.#markerContainer.addEventListener(\"click\", (e)=>{\n            if (e.target.classList.contains(\"content-spotlight--marker\")) {\n                const slide = e.target.dataset.slide;\n                this.#activateMarkers(slide);\n                this.#transitionNextSlide(slide);\n            }\n        });\n    }\n    #activateMarkers(slide) {\n        document.querySelectorAll(\".content-spotlight--marker\").forEach((value)=>value.classList.remove(\"content-spotlight--marker-active\"));\n        document.querySelector(`.content-spotlight--marker[data-slide=\"${slide}\"]`).classList.add(\"content-spotlight--marker-active\");\n    }\n    #transitionNextSlide(slide) {\n        this.#currentSlide = Number(slide);\n        this.#sliderElements.forEach((value, index)=>value.style.transform = `translateX(${(index - slide) * 100}%)`);\n    }\n    #nextSlide() {\n        if (this.#currentSlide === this.#sliderMaxElements - 1) this.#currentSlide = 0;\n        else this.#currentSlide++;\n        this.#activateMarkers(this.#currentSlide);\n        this.#transitionNextSlide(this.#currentSlide);\n    }\n    #prevSlide() {\n        if (this.#currentSlide === 0) this.#currentSlide = this.#sliderMaxElements - 1;\n        else this.#currentSlide--;\n        this.#activateMarkers(this.#currentSlide);\n        this.#transitionNextSlide(this.#currentSlide);\n    }\n    addBtnHoverShadowHandler() {\n        this.#spotlightBtn.forEach((button)=>{\n            button.addEventListener(\"mouseover\", (e)=>this.#addBtnHoverShadow(e, true));\n        });\n        this.#spotlightBtn.forEach((button)=>{\n            button.addEventListener(\"mouseout\", (e)=>this.#addBtnHoverShadow(e, false));\n        });\n    }\n    #addBtnHoverShadow(e, flag) {\n        if (e.currentTarget.classList.contains(\"content-spotlight--left-btn\")) document.querySelector(\".slider-shadow-left\").style.width = flag ? \"7rem\" : \"0rem\";\n        else if (e.currentTarget.classList.contains(\"content-spotlight--right-btn\")) document.querySelector(\".slider-shadow-right\").style.width = flag ? \"7rem\" : \"0rem\";\n    }\n}\nvar $a9545333b1580a57$export$2e2bcd8739ae039 = new $a9545333b1580a57$var$SpotlightSliderView();\n\n\n\n/**\r\n * Handles the view of the spotlight overview\r\n */ class $d2959fcb8db144c0$var$SpotlightOverviewView {\n    #spotlightContent;\n    #spotlightOverview;\n    #spotlightOverviewTitleClipCntr;\n    #spotlightOverviewTitle;\n    #spotlightOverviewRating;\n    #spotlightOverviewReleaseDate;\n    #spotlightOverviewGenres;\n    #spotlightOverviewDesc;\n    #CustomEventClippedTitleAnimDone;\n    #clippedTitleAnimId;\n    /**\r\n   * Initializes class fields\r\n   */ initVars(spotlightContent) {\n        this.#spotlightContent = spotlightContent;\n        this.#spotlightOverview = document.querySelector(\".content-spotlight--overview\");\n        this.#spotlightOverviewTitleClipCntr = document.querySelector(\".content-spotlight--overview-title-clip\");\n        this.#spotlightOverviewTitle = this.#spotlightOverview.querySelector(\".content-spotlight--overview-title\");\n        this.#spotlightOverviewRating = this.#spotlightOverview.querySelector(\".content-spotlight--overview-rating\");\n        this.#spotlightOverviewReleaseDate = this.#spotlightOverview.querySelector(\".content-spotlight--overview-date\");\n        this.#spotlightOverviewGenres = this.#spotlightOverview.querySelector(\".content-spotlight--overview-genres\");\n        this.#spotlightOverviewDesc = this.#spotlightOverview.querySelector(\".content-spotlight--overview-description\");\n        this.#CustomEventClippedTitleAnimDone = new Event(\"clippedTitleAnimDone\");\n    }\n    /**\r\n   * Inserts the default overview layout with initial content into the DOM\r\n   *\r\n   * @param {*} initialContent Contains the initial content\r\n   */ initDefaultState(initialContent) {\n        document.querySelector(\".content-spotlight--slider\").insertAdjacentHTML(\"afterend\", `\r\n        <div class=\"content-spotlight--overview\">\r\n          <div>\r\n            <div class=\"content-spotlight--overview-title-clip\">\r\n              <p class=\"content-spotlight--overview-title\">${initialContent.title}</p>\r\n            </div>\r\n            <p class=\"content-spotlight--overview-rating\" style=\"background-color: ${this.#getNewRatingColor(initialContent.rating)};\">${initialContent.rating}</p>\r\n          </div>\r\n          <button class=\"content-spotlight--overview-back-btn\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke-width=\"1.5\"\r\n              stroke=\"currentColor\"\r\n              class=\"content-spotlight--overview-back-btn-icon\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18\" />\r\n            </svg>\r\n          </button>\r\n          <p class=\"content-spotlight--overview-date\">Release Date: ${initialContent.releaseDate}</p>\r\n          <div class=\"content-spotlight--overview-genres\">\r\n            <p>Genres: &nbsp;</p>\r\n            ${initialContent.genres.map((genre, index)=>{\n            return index === initialContent.genres.length - 1 ? `<p class=\"content-spotlight--overview-genre\">${genre}</p>` : `<p class=\"content-spotlight--overview-genre\">${genre}, &nbsp;</p>`;\n        }).join(\"\")}\r\n          </div>\r\n          <p class=\"content-spotlight--overview-description\">${initialContent.description}</p>\r\n        </div>\r\n      `);\n    }\n    initHandlers() {\n        this.addOnReadBtnClickedHandler();\n        this.addOnOverviewBackBtnClickedHandler();\n        this.addOnClippedTitleAnimDoneHandler();\n        this.addOnSpotlightBtnClickedHandler();\n        this.addOnArrowKeyClickedHandler();\n        this.addOnMarkerClickedHandler();\n    }\n    // TODO: Maybe needed in the future if the spotlight is dynamically changed while on the website\n    //       and spotlightContent needs to be updated so the handlers can use the right data. Maybe\n    //       should be a handler, waiting for the signal that the spotlight content has been updated\n    reassignSpotlightContent() {}\n    /**\r\n   * Makes the title transition towards the default position after clipped animation\r\n   */ addOnClippedTitleAnimDoneHandler() {\n        this.#spotlightOverviewTitle.addEventListener(\"clippedTitleAnimDone\", function() {\n            this.style.left = \"-0.5%\";\n        });\n    }\n    /**\r\n   * Makes the title and text in the spotlight invisible, moves the overview into the window upon clicking the 'read\r\n   * description' container, and animates the overview title if clipped\r\n   */ addOnReadBtnClickedHandler() {\n        document.querySelectorAll(\".content-spotlight--more-container\").forEach((container)=>{\n            container.addEventListener(\"click\", ()=>{\n                this.#toggleBackgroundText(true);\n                this.#spotlightOverview.style.transform = \"translateX(0%)\";\n                // Animates the overview title if clipped and dispatches a custom event after the animation to trigger the\n                // event handler defined above\n                this.#animateClippedTitle();\n            });\n        });\n    }\n    #animateClippedTitle() {\n        if (this.#spotlightOverviewTitleClipCntr.offsetWidth >= this.#spotlightOverviewTitleClipCntr.scrollWidth) return;\n        const transitionDuration = Math.ceil(this.#spotlightOverviewTitleClipCntr.scrollWidth / (0, $ba30e20475feac5a$export$4523a2f9c97b897b));\n        this.#spotlightOverviewTitle.style.transitionDuration = `${transitionDuration}s`;\n        const textWidth = this.#calcTitleWidth();\n        const leftOver = (textWidth - (0, $ba30e20475feac5a$export$5a2750a4dbd9e24e)) / (0, $ba30e20475feac5a$export$5a2750a4dbd9e24e) * 100;\n        this.#spotlightOverviewTitle.style.left = `-${leftOver}%`;\n        this.#clippedTitleAnimId = setTimeout(()=>this.#spotlightOverviewTitle.dispatchEvent(this.#CustomEventClippedTitleAnimDone), `${transitionDuration * 1000 + (0, $ba30e20475feac5a$export$759badfb1342d135)}`);\n    }\n    #calcTitleWidth() {\n        this.#spotlightOverviewTitle.style.minWidth = \"max-content\";\n        const width = this.#spotlightOverviewTitle.offsetWidth;\n        this.#spotlightOverviewTitle.style.minWidth = \"\";\n        return width;\n    }\n    /**\r\n   * Makes the spotlight title and text visible, moves the overview out of the window upon clicking the back button\r\n   * in the overview, and resets the position of the title (for the case of clipped title animation)\r\n   */ addOnOverviewBackBtnClickedHandler() {\n        document.querySelector(\".content-spotlight--overview-back-btn\").addEventListener(\"click\", ()=>{\n            this.#toggleBackgroundText(false);\n            this.#spotlightOverview.style.transform = \"translateX(-100%)\";\n            this.#resetTitle();\n        });\n    }\n    /**\r\n   * Makes the title and text in the spotlight visible, moves the overview out of the window, changes the\r\n   * overview content, and resets the position of the title (for the case of clipped title animation) upon clicking\r\n   * any spotlight transition button\r\n   *\r\n   * TODO: --> (BUG) Background title doesn't appear during transition\r\n   */ addOnSpotlightBtnClickedHandler() {\n        document.querySelectorAll(\".content-spotlight--btn\").forEach((button)=>{\n            button.addEventListener(\"click\", ()=>{\n                this.#resetSpotlightAndOverview();\n            });\n        });\n    }\n    /**\r\n   * Similar functionality to this.addOnSpotlightBtnClickedHandler() but upon clicking the left and right arrow keys\r\n   */ addOnArrowKeyClickedHandler() {\n        document.addEventListener(\"keydown\", ()=>{\n            this.#resetSpotlightAndOverview();\n        });\n    }\n    /**\r\n   * Similar functionality to this.addOnSpotlightBtnClickedHandler() but upon clicking a marker\r\n   */ addOnMarkerClickedHandler() {\n        document.querySelector(\".content-spotlight--markers\").addEventListener(\"click\", (e)=>{\n            this.#resetSpotlightAndOverview();\n        });\n    }\n    #resetSpotlightAndOverview() {\n        this.#toggleBackgroundText(false);\n        this.#spotlightOverview.style.transform = \"translateX(-100%)\";\n        this.#resetTitle();\n        // Changes overview content after 0.5 seconds to avoid visible changes during transition\n        // Note: Must be < ~1 second to avoid not triggering the animation for clipped titles in the overview since the\n        //       trigger is dependent on the new slide content\n        setTimeout(()=>{\n            this.#changeOverview();\n        }, 500);\n    }\n    #toggleBackgroundText(toggleFlag) {\n        document.querySelector(`.content-spotlight--main-content[style=\"transform: translateX(0%);\"] .content-spotlight--text-container`).style.opacity = toggleFlag ? \"0\" : \"\";\n    }\n    #resetTitle() {\n        // Note: Must execute to avoid animating the title to default position while already at the default position,\n        //       which causes either a slight jitter or a clipped title to not animate (since it's stuck at the\n        //       default position)\n        clearTimeout(this.#clippedTitleAnimId);\n        // Note: Must execute code below (i.e. transition = 'none') to avoid not moving clipped titles immediately to\n        //       the default position because the duration property is always set for clipped titles\n        this.#spotlightOverviewTitle.style.transition = \"none\";\n        this.#spotlightOverviewTitle.style.left = \"-0.5%\";\n        // Note: Must execute after some time to avoid conflict between transition = 'none' and transition = '...'\n        setTimeout(()=>{\n            this.#spotlightOverviewTitle.style.transitionProperty = \"left\";\n            this.#spotlightOverviewTitle.style.transitionDelay = \"1.5s\";\n            this.#spotlightOverviewTitle.style.transitionTimingFunction = \"cubic-bezier(1, 1, 1, 1)\";\n        }, 100);\n    }\n    #changeOverview() {\n        let currentSlide = this.#getCurrentSlide();\n        const currentContent = this.#spotlightContent[currentSlide];\n        this.#changeOverviewElements(currentContent);\n        this.#spotlightOverviewRating.style.backgroundColor = this.#getNewRatingColor(Number(this.#spotlightOverviewRating.textContent));\n    }\n    #getCurrentSlide() {\n        let ret = 0;\n        document.querySelectorAll(\".content-spotlight--marker\").forEach((marker)=>{\n            if (marker.classList.contains(\"content-spotlight--marker-active\")) ret = marker.dataset.slide;\n        });\n        return ret;\n    }\n    #changeOverviewElements(currentContent) {\n        this.#spotlightOverviewTitle.textContent = currentContent.title;\n        this.#spotlightOverviewRating.textContent = currentContent.rating;\n        this.#spotlightOverviewReleaseDate.textContent = `Release Date: ${currentContent.releaseDate}`;\n        this.#spotlightOverviewGenres.innerHTML = \"\";\n        this.#spotlightOverviewGenres.innerHTML = `\r\n      <p>Genres: &nbsp;</p>\r\n      ${currentContent.genres.map((genre, index)=>{\n            return index === currentContent.genres.length - 1 ? `<p class=\"content-spotlight--overview-genre\">${genre}</p>` : `<p class=\"content-spotlight--overview-genre\">${genre}, &nbsp;</p>`;\n        }).join(\"\")}\r\n    `;\n        this.#spotlightOverviewDesc.textContent = currentContent.description;\n    }\n    #getNewRatingColor(rating) {\n        if (rating >= 9.0) return \"var(--c-rating-best)\";\n        else if (rating >= 8.0) return \"var(--c-rating-good)\";\n        else if (rating >= 7.0) return \"var(--c-rating-okay)\";\n        else if (rating >= 6.0) return \"var(--c-rating-bad)\";\n        else return \"var(--c-rating-worst)\";\n    }\n}\nvar $d2959fcb8db144c0$export$2e2bcd8739ae039 = new $d2959fcb8db144c0$var$SpotlightOverviewView();\n\n\n/////////////////////////////////////////////////\n///////// Search bar functionality\n(0, $0d13d069d85dae3d$export$2e2bcd8739ae039).initHandlers();\n/////////////////////////////////////////////////\n///////// Default movie state init\nconst $f50bd1f2915ed0f2$var$controlMovieDefaultState = async function() {\n    await Promise.all([\n        $0f1d4402dffacf5b$export$8bebce24411c8fc2(),\n        $0f1d4402dffacf5b$export$4e904f350c2cabd(1),\n        $0f1d4402dffacf5b$export$1ec647452c5fd561(1)\n    ]);\n    await $0f1d4402dffacf5b$export$e4bb840dce7a48f9(); // Note: Dependent on fetchMovieGenres()\n};\n/////////////////////////////////////////////////\n///////// Movie spotlight functionality\nconst $f50bd1f2915ed0f2$var$controlMovieSpotlight = function() {\n    // Determines the top 3 most popular movies\n    $0f1d4402dffacf5b$export$45dbabef412e43eb();\n    // Displays the top 3 most popular movies in the spotlight\n    // Note: Dependent on above code\n    (0, $854894b32fbd3b72$export$2e2bcd8739ae039).initVars($0f1d4402dffacf5b$export$ca000e230c0caa3e.movieSpotlightInfo);\n    (0, $854894b32fbd3b72$export$2e2bcd8739ae039).initDefaultState();\n    // Readies the slider functionality\n    // Note: Dependent on above code\n    (0, $a9545333b1580a57$export$2e2bcd8739ae039).initVars();\n    (0, $a9545333b1580a57$export$2e2bcd8739ae039).initDefaultState();\n    (0, $a9545333b1580a57$export$2e2bcd8739ae039).initHandlers();\n    // Readies the overview functionality\n    // Note: Dependent on above code\n    (0, $d2959fcb8db144c0$export$2e2bcd8739ae039).initDefaultState($0f1d4402dffacf5b$export$ca000e230c0caa3e.movieSpotlightInfo[0]);\n    (0, $d2959fcb8db144c0$export$2e2bcd8739ae039).initVars($0f1d4402dffacf5b$export$ca000e230c0caa3e.movieSpotlightInfo);\n    (0, $d2959fcb8db144c0$export$2e2bcd8739ae039).initHandlers();\n};\n/////////////////////////////////////////////////\n///////// Movie tracks functionality\nconst $f50bd1f2915ed0f2$var$controlMovieTracks = function() {\n    // Determines the top rated movies and most popular movies by genre\n    $0f1d4402dffacf5b$export$54e5b5bd39b67989();\n};\n/////////////////////////////////////////////////\n///////// Movie init\nconst $f50bd1f2915ed0f2$var$movieInit = async function() {\n    await $f50bd1f2915ed0f2$var$controlMovieDefaultState();\n    $f50bd1f2915ed0f2$var$controlMovieSpotlight();\n    $f50bd1f2915ed0f2$var$controlMovieTracks();\n    console.log($0f1d4402dffacf5b$export$ca000e230c0caa3e);\n};\n$f50bd1f2915ed0f2$var$movieInit();\n\n\n//# sourceMappingURL=index.be711b4c.js.map\n","/////////////////////////////////////////////////\r\n// CONTROLLER of the MVC architecture\r\n//\r\n// Description: Controls data flow between the model and different views\r\n/////////////////////////////////////////////////\r\n\r\nimport * as model from \"./model.js\";\r\nimport searchBarView from \"./views/searchBarView.js\";\r\nimport spotlightContentView from \"./views/spotlightContentView.js\";\r\nimport spotlightSliderView from \"./views/spotlightSliderView.js\";\r\nimport spotlightOverviewView from \"./views/spotlightOverviewView.js\";\r\n\r\n/////////////////////////////////////////////////\r\n///////// Search bar functionality\r\n\r\nsearchBarView.initHandlers();\r\n\r\n/////////////////////////////////////////////////\r\n///////// Default movie state init\r\n\r\nconst controlMovieDefaultState = async function () {\r\n  await Promise.all([model.fetchMovieGenres(), model.fetchMostPopularMovies(1), model.fetchTopRatedMovies(1)]);\r\n  await model.fetchMoviesByGenre(); // Note: Dependent on fetchMovieGenres()\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Movie spotlight functionality\r\n\r\nconst controlMovieSpotlight = function () {\r\n  // Determines the top 3 most popular movies\r\n  model.determineMovieSpotlightContent();\r\n\r\n  // Displays the top 3 most popular movies in the spotlight\r\n  // Note: Dependent on above code\r\n  spotlightContentView.initVars(model.state.movieSpotlightInfo);\r\n  spotlightContentView.initDefaultState();\r\n\r\n  // Readies the slider functionality\r\n  // Note: Dependent on above code\r\n  spotlightSliderView.initVars();\r\n  spotlightSliderView.initDefaultState();\r\n  spotlightSliderView.initHandlers();\r\n\r\n  // Readies the overview functionality\r\n  // Note: Dependent on above code\r\n  spotlightOverviewView.initDefaultState(model.state.movieSpotlightInfo[0]);\r\n  spotlightOverviewView.initVars(model.state.movieSpotlightInfo);\r\n  spotlightOverviewView.initHandlers();\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Movie tracks functionality\r\n\r\nconst controlMovieTracks = function () {\r\n  // Determines the top rated movies and most popular movies by genre\r\n  model.determineMovieTracksContent();\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Movie init\r\n\r\nconst movieInit = async function () {\r\n  await controlMovieDefaultState();\r\n  controlMovieSpotlight();\r\n  controlMovieTracks();\r\n\r\n  console.log(model.state);\r\n};\r\n\r\nmovieInit();\r\n","/////////////////////////////////////////////////\r\n// MODEL of the MVC architecture\r\n//\r\n// Description: Fetches data from and posts data to the API\r\n/////////////////////////////////////////////////\r\n\r\nimport {\r\n  OPTIONS,\r\n  BASE_URL,\r\n  BASE_URL_IMAGE,\r\n  IMG_SIZE,\r\n  SPOTLIGHT_CONTENT_NUM,\r\n  POPULAR_MOVIE_SKIP_OFFSET,\r\n  MOST_POPULAR_GENRES,\r\n} from \"./config.js\";\r\n\r\n/////////////////////////////////////////////////\r\n///////// Represents the state of the system\r\n\r\nexport const state = {\r\n  movieGenresInfo: [],\r\n  tvsGenresInfo: [],\r\n\r\n  mostPopularMoviesInfo: [], // [{ mostPopularMovies: [{...}, {...}, ...], page: _}, { ... }, ...]\r\n  movieSpotlightInfo: [], // [{ id: _, title: '', releaseDate: '', ... }, ...]\r\n\r\n  topRatedMoviesInfo: [],\r\n  moviesByGenreInfo: [],\r\n  movieTracksInfo: [],\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Helper functions\r\n\r\nexport const getMovieGenresStr = function (movieGenresId) {\r\n  const movieGenresStr = [];\r\n  let counter = 0;\r\n\r\n  state.movieGenresInfo.every((movieGenre) => {\r\n    if (movieGenresId.some((genreId) => genreId === movieGenre.id)) {\r\n      movieGenresStr.push(movieGenre.name);\r\n      counter++;\r\n    }\r\n\r\n    if (counter === movieGenresId.length) return false;\r\n\r\n    return true;\r\n  });\r\n\r\n  return movieGenresStr;\r\n};\r\n\r\nexport const getMovieGenresId = function (movieGenresStr) {\r\n  const movieGenresId = [];\r\n  let counter = 0;\r\n\r\n  state.movieGenresInfo.every((movieGenre) => {\r\n    if (movieGenresStr.some((genreStr) => genreStr.toLowerCase() === movieGenre.name.toLowerCase())) {\r\n      movieGenresId.push(movieGenre.id);\r\n      counter++;\r\n    }\r\n\r\n    if (counter === movieGenresStr.length) return false;\r\n\r\n    return true;\r\n  });\r\n\r\n  return movieGenresId;\r\n};\r\n\r\nconst getMoviesByGenreURL = function (genreId) {\r\n  return `${BASE_URL}/discover/movie`\r\n    .concat(`?include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`)\r\n    .concat(`&with_genres=${genreId}`);\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Fetches movie genres\r\n\r\nexport const fetchMovieGenres = async function () {\r\n  if (state.movieGenresInfo.length !== 0) return;\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/genre/movie/list?language=en`, OPTIONS);\r\n    const { genres } = await response.json();\r\n\r\n    state.movieGenresInfo = genres;\r\n  } catch (err) {\r\n    console.error(`(model.js::fetchMovieGenres()) ${err}`);\r\n    throw err;\r\n  }\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Fetches most popular movies\r\n\r\nexport const fetchMostPopularMovies = async function (page) {\r\n  if (state.mostPopularMoviesInfo.length !== 0) return;\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/movie/popular/?language=en-US&page=${page}`, OPTIONS);\r\n    const mostPopularMovies = await response.json();\r\n\r\n    state.mostPopularMoviesInfo.push({\r\n      mostPopularMovies: mostPopularMovies.results,\r\n      page: mostPopularMovies.page,\r\n    });\r\n  } catch (err) {\r\n    console.error(`(model.js::fetchPopularMovies()) ${err}`);\r\n    throw err;\r\n  }\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Fetches top rated movies\r\n\r\nexport const fetchTopRatedMovies = async function (page) {\r\n  if (state.topRatedMoviesInfo.length !== 0) return;\r\n\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/movie/top_rated?language=en-US&page=${page}`, OPTIONS);\r\n    const topRatedMovies = await response.json();\r\n\r\n    state.topRatedMoviesInfo.push({\r\n      topRatedMovies: topRatedMovies.results,\r\n      page: topRatedMovies.page,\r\n    });\r\n  } catch (err) {\r\n    console.error(`(model.js::fetchTopRatedMovies()) ${err}`);\r\n    throw err;\r\n  }\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Fetches movies by specified genres\r\n\r\nexport const fetchMoviesByGenre = async function () {\r\n  if (state.moviesByGenreInfo.length !== 0) return;\r\n\r\n  const movieGenresId = getMovieGenresId(MOST_POPULAR_GENRES);\r\n\r\n  try {\r\n    const response = await Promise.all([\r\n      fetch(getMoviesByGenreURL(movieGenresId[0]), OPTIONS),\r\n      fetch(getMoviesByGenreURL(movieGenresId[1]), OPTIONS),\r\n      fetch(getMoviesByGenreURL(movieGenresId[2]), OPTIONS),\r\n      fetch(getMoviesByGenreURL(movieGenresId[3]), OPTIONS),\r\n    ]);\r\n    const moviesByGenre = await Promise.all([\r\n      response[0].json(),\r\n      response[1].json(),\r\n      response[2].json(),\r\n      response[3].json(),\r\n    ]);\r\n\r\n    moviesByGenre.forEach((result, index) => {\r\n      state.moviesByGenreInfo.push({\r\n        genreId: movieGenresId[index],\r\n        results: {\r\n          page: result.page,\r\n          movies: result.results,\r\n        },\r\n      });\r\n    });\r\n  } catch (err) {\r\n    console.error(`(model.js::fetchMoviesByGenre()) ${err}`);\r\n    throw err;\r\n  }\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Determines which movies are in the\r\n///////// spotlight (i.e. top 3 most popular)\r\n\r\nexport const determineMovieSpotlightContent = function () {\r\n  if (state.mostPopularMoviesInfo.length === 0) return;\r\n\r\n  const mostPopularMovies = state.mostPopularMoviesInfo[0].mostPopularMovies;\r\n\r\n  for (let i = 0; i < SPOTLIGHT_CONTENT_NUM * POPULAR_MOVIE_SKIP_OFFSET; i += POPULAR_MOVIE_SKIP_OFFSET) {\r\n    let entry = {};\r\n\r\n    entry.id = mostPopularMovies[i].id;\r\n    entry.title = mostPopularMovies[i].title;\r\n    entry.releaseDate = mostPopularMovies[i].release_date;\r\n\r\n    try {\r\n      entry.genres = getMovieGenresStr(mostPopularMovies[i].genre_ids);\r\n    } catch (err) {\r\n      console.error(`(module.js::determineMovieSpotlight()) ${err}`);\r\n      throw err;\r\n    }\r\n\r\n    entry.description = mostPopularMovies[i].overview;\r\n    entry.rating = mostPopularMovies[i].vote_average;\r\n    entry.backdropPath = `${BASE_URL_IMAGE}/${IMG_SIZE}${mostPopularMovies[i].backdrop_path}`;\r\n\r\n    state.movieSpotlightInfo.push(entry);\r\n  }\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Determines which movies are in each\r\n///////// track\r\n\r\nexport const determineMovieTracksContent = function () {\r\n  state.movieTracksInfo.push(state.topRatedMoviesInfo[0].topRatedMovies.slice(0, 10));\r\n  state.movieTracksInfo.push(\r\n    [{ genreId: state.moviesByGenreInfo[0].genreId, movies: state.moviesByGenreInfo[0].results.movies.slice(0, 10) }],\r\n    [{ genreId: state.moviesByGenreInfo[1].genreId, movies: state.moviesByGenreInfo[1].results.movies.slice(0, 10) }],\r\n    [{ genreId: state.moviesByGenreInfo[2].genreId, movies: state.moviesByGenreInfo[2].results.movies.slice(0, 10) }],\r\n    [{ genreId: state.moviesByGenreInfo[3].genreId, movies: state.moviesByGenreInfo[3].results.movies.slice(0, 10) }]\r\n  );\r\n};\r\n\r\n/////////////////////////////////////////////////\r\n///////// Fetches TV show genres\r\n\r\n// TODO: Use for TV portion\r\nexport const fetchTVSGenres = async function () {\r\n  if (state.tvsGenresInfo.length !== 0) return;\r\n\r\n  const response = await fetch(`${BASE_URL}/genre/tv/list?language=en`, OPTIONS);\r\n  const { genres } = await response.json();\r\n\r\n  state.tvsGenresInfo = genres;\r\n};\r\n","/////////////////////////////////////////////////\r\n///////// API\r\n\r\nexport const API_KEY = \"40d476b7bf5ff2313ce9a96c31065e66\";\r\nexport const API_RAT =\r\n  \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MGQ0NzZiN2JmNWZmMjMxM2NlOWE5NmMzMTA2NWU2NiIsInN1YiI6IjY1MTIyNTYzMjZkYWMxMDE0ZTIzMzM4OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ol_KoRpPN_9jMnmWMVoAklqxoxIvq9uRoKatzqDiTXY\";\r\n\r\n/////////////////////////////////////////////////\r\n///////// API-meta\r\n\r\nexport const OPTIONS = {\r\n  method: \"GET\",\r\n  headers: {\r\n    accept: \"application/json\",\r\n    Authorization: `Bearer ${API_RAT}`,\r\n  },\r\n};\r\n\r\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\r\nexport const BASE_URL_IMAGE = \"https://image.tmdb.org/t/p\";\r\n\r\nexport const IMG_SIZE = \"original\";\r\n\r\n/////////////////////////////////////////////////\r\n///////// Model\r\n\r\nexport const SPOTLIGHT_CONTENT_NUM = 3;\r\nexport const POPULAR_MOVIE_SKIP_OFFSET = 9;\r\n\r\n/////////////////////////////////////////////////\r\n///////// Spotlight\r\n\r\nexport const SO_TITLE_MAX_WIDTH = 305;\r\nexport const SO_CTITLE_TRANS_DURATION_RATIO = 112; // TODO: Ratio should be changed so larger --> slower, smaller --> faster\r\nexport const SO_CTITLE_TRANS_DELAY_OFFSET = 2000;\r\n\r\n/////////////////////////////////////////////////\r\n///////// Movie tracks\r\n\r\nexport const MOST_POPULAR_GENRES = [\"adventure\", \"action\", \"drama\", \"romance\"];\r\n","class SearchBarView {\r\n  #searchContainer = document.querySelector(\".nav-bar--search\");\r\n  #searchBar = document.querySelector(\".nav-bar--search-bar\");\r\n  #searchBarBtn = document.querySelector(\".nav-bar--search-bar-btn\");\r\n\r\n  initHandlers() {\r\n    this.#addSearchHandler();\r\n    this.#addSearchBarHandler();\r\n  }\r\n\r\n  // TODO: Use input for search functionality\r\n  #addSearchHandler() {\r\n    this.#searchContainer.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n\r\n      console.log(this.#searchBar.value);\r\n\r\n      if (this.#searchBar.value === \"\") return;\r\n\r\n      this.#searchBar.value = \"\";\r\n    });\r\n  }\r\n\r\n  #addSearchBarHandler() {\r\n    this.#searchBarBtn.addEventListener(\"mouseenter\", () => {\r\n      this.#changeSearchBarStyle(true);\r\n      this.#searchContainer.addEventListener(\"mouseleave\", this.#changeSearchBarStyle.bind(this, false));\r\n    });\r\n  }\r\n\r\n  #changeSearchBarStyle(flag) {\r\n    this.#searchBar.style.width = flag ? \"36rem\" : \"0rem\";\r\n    this.#searchBar.style.padding = flag ? \"0 1rem 0 1rem\" : \"0rem\";\r\n  }\r\n}\r\n\r\nexport default new SearchBarView();\r\n","class SpotlightContentView {\r\n  #spotlightContent;\r\n  #slider;\r\n\r\n  initVars(spotlightContent) {\r\n    this.#spotlightContent = spotlightContent;\r\n    this.#slider = document.querySelector(\".content-spotlight--slider\");\r\n  }\r\n\r\n  initDefaultState() {\r\n    this.#spotlightContent.forEach((content) => {\r\n      this.#slider.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `<div class=\"content-spotlight--main-content\">\r\n          <img class=\"content-spotlight--backdrop\" src=\"${content.backdropPath}\" />\r\n          <div class=\"content-spotlight--text-container\">  \r\n            <p class=\"content-spotlight--title\">${content.title}</p>\r\n            <div class=\"content-spotlight--more-container\">\r\n              <p class=\"content-spotlight--more\">Read description</p>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke-width=\"1.5\"\r\n                stroke=\"currentColor\"\r\n                class=\"content-spotlight--more-icon\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3\" />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>`\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default new SpotlightContentView();\r\n","class SpotlightSliderView {\r\n  #spotlightBtn;\r\n  #sliderElements;\r\n  #sliderMaxElements;\r\n  #currentSlide = 0;\r\n  #markerContainer;\r\n\r\n  initVars() {\r\n    this.#spotlightBtn = document.querySelectorAll(\".content-spotlight--btn\");\r\n    this.#sliderElements = document.querySelectorAll(\".content-spotlight--main-content\");\r\n    this.#sliderMaxElements = this.#sliderElements.length;\r\n    this.#markerContainer = document.querySelector(\".content-spotlight--markers\");\r\n  }\r\n\r\n  initDefaultState() {\r\n    this.#initMarkers();\r\n    this.#activateMarkers(0);\r\n    this.#transitionNextSlide(0);\r\n  }\r\n\r\n  #initMarkers() {\r\n    this.#sliderElements.forEach((_, index) => {\r\n      this.#markerContainer.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        `<div class=\"content-spotlight--marker content-spotlight--marker-${index}\" data-slide=${index}></div>`\r\n      );\r\n    });\r\n  }\r\n\r\n  initHandlers() {\r\n    this.addTransitionByBtnHandler();\r\n    this.addTransitionByKeyHandler();\r\n    this.addTransitionByMarkerHandler();\r\n    this.addBtnHoverShadowHandler();\r\n  }\r\n\r\n  addTransitionByBtnHandler() {\r\n    this.#spotlightBtn.forEach((button) => {\r\n      button.addEventListener(\"click\", (e) => {\r\n        if (e.currentTarget.classList.contains(\"content-spotlight--left-btn\")) this.#prevSlide();\r\n        else if (e.currentTarget.classList.contains(\"content-spotlight--right-btn\")) this.#nextSlide();\r\n      });\r\n    });\r\n  }\r\n\r\n  addTransitionByKeyHandler() {\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      if (e.key === \"ArrowLeft\") this.#prevSlide();\r\n      else if (e.key === \"ArrowRight\") this.#nextSlide();\r\n    });\r\n  }\r\n\r\n  addTransitionByMarkerHandler() {\r\n    this.#markerContainer.addEventListener(\"click\", (e) => {\r\n      if (e.target.classList.contains(\"content-spotlight--marker\")) {\r\n        const slide = e.target.dataset.slide;\r\n\r\n        this.#activateMarkers(slide);\r\n        this.#transitionNextSlide(slide);\r\n      }\r\n    });\r\n  }\r\n\r\n  #activateMarkers(slide) {\r\n    document\r\n      .querySelectorAll(\".content-spotlight--marker\")\r\n      .forEach((value) => value.classList.remove(\"content-spotlight--marker-active\"));\r\n\r\n    document\r\n      .querySelector(`.content-spotlight--marker[data-slide=\"${slide}\"]`)\r\n      .classList.add(\"content-spotlight--marker-active\");\r\n  }\r\n\r\n  #transitionNextSlide(slide) {\r\n    this.#currentSlide = Number(slide);\r\n\r\n    this.#sliderElements.forEach((value, index) => (value.style.transform = `translateX(${(index - slide) * 100}%)`));\r\n  }\r\n\r\n  #nextSlide() {\r\n    if (this.#currentSlide === this.#sliderMaxElements - 1) this.#currentSlide = 0;\r\n    else this.#currentSlide++;\r\n\r\n    this.#activateMarkers(this.#currentSlide);\r\n    this.#transitionNextSlide(this.#currentSlide);\r\n  }\r\n\r\n  #prevSlide() {\r\n    if (this.#currentSlide === 0) this.#currentSlide = this.#sliderMaxElements - 1;\r\n    else this.#currentSlide--;\r\n\r\n    this.#activateMarkers(this.#currentSlide);\r\n    this.#transitionNextSlide(this.#currentSlide);\r\n  }\r\n\r\n  addBtnHoverShadowHandler() {\r\n    this.#spotlightBtn.forEach((button) => {\r\n      button.addEventListener(\"mouseover\", (e) => this.#addBtnHoverShadow(e, true));\r\n    });\r\n\r\n    this.#spotlightBtn.forEach((button) => {\r\n      button.addEventListener(\"mouseout\", (e) => this.#addBtnHoverShadow(e, false));\r\n    });\r\n  }\r\n\r\n  #addBtnHoverShadow(e, flag) {\r\n    if (e.currentTarget.classList.contains(\"content-spotlight--left-btn\")) {\r\n      document.querySelector(\".slider-shadow-left\").style.width = flag ? \"7rem\" : \"0rem\";\r\n    } else if (e.currentTarget.classList.contains(\"content-spotlight--right-btn\")) {\r\n      document.querySelector(\".slider-shadow-right\").style.width = flag ? \"7rem\" : \"0rem\";\r\n    }\r\n  }\r\n}\r\n\r\nexport default new SpotlightSliderView();\r\n","import { SO_TITLE_MAX_WIDTH, SO_CTITLE_TRANS_DURATION_RATIO, SO_CTITLE_TRANS_DELAY_OFFSET } from \"../config.js\";\r\n\r\n/**\r\n * Handles the view of the spotlight overview\r\n */\r\nclass SpotlightOverviewView {\r\n  #spotlightContent;\r\n\r\n  #spotlightOverview;\r\n  #spotlightOverviewTitleClipCntr;\r\n  #spotlightOverviewTitle;\r\n  #spotlightOverviewRating;\r\n  #spotlightOverviewReleaseDate;\r\n  #spotlightOverviewGenres;\r\n  #spotlightOverviewDesc;\r\n\r\n  #CustomEventClippedTitleAnimDone;\r\n  #clippedTitleAnimId;\r\n\r\n  /**\r\n   * Initializes class fields\r\n   */\r\n  initVars(spotlightContent) {\r\n    this.#spotlightContent = spotlightContent;\r\n    this.#spotlightOverview = document.querySelector(\".content-spotlight--overview\");\r\n    this.#spotlightOverviewTitleClipCntr = document.querySelector(\".content-spotlight--overview-title-clip\");\r\n    this.#spotlightOverviewTitle = this.#spotlightOverview.querySelector(\".content-spotlight--overview-title\");\r\n    this.#spotlightOverviewRating = this.#spotlightOverview.querySelector(\".content-spotlight--overview-rating\");\r\n    this.#spotlightOverviewReleaseDate = this.#spotlightOverview.querySelector(\".content-spotlight--overview-date\");\r\n    this.#spotlightOverviewGenres = this.#spotlightOverview.querySelector(\".content-spotlight--overview-genres\");\r\n    this.#spotlightOverviewDesc = this.#spotlightOverview.querySelector(\".content-spotlight--overview-description\");\r\n    this.#CustomEventClippedTitleAnimDone = new Event(\"clippedTitleAnimDone\");\r\n  }\r\n\r\n  /**\r\n   * Inserts the default overview layout with initial content into the DOM\r\n   *\r\n   * @param {*} initialContent Contains the initial content\r\n   */\r\n  initDefaultState(initialContent) {\r\n    document.querySelector(\".content-spotlight--slider\").insertAdjacentHTML(\r\n      \"afterend\",\r\n      `\r\n        <div class=\"content-spotlight--overview\">\r\n          <div>\r\n            <div class=\"content-spotlight--overview-title-clip\">\r\n              <p class=\"content-spotlight--overview-title\">${initialContent.title}</p>\r\n            </div>\r\n            <p class=\"content-spotlight--overview-rating\" style=\"background-color: ${this.#getNewRatingColor(\r\n              initialContent.rating\r\n            )};\">${initialContent.rating}</p>\r\n          </div>\r\n          <button class=\"content-spotlight--overview-back-btn\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke-width=\"1.5\"\r\n              stroke=\"currentColor\"\r\n              class=\"content-spotlight--overview-back-btn-icon\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18\" />\r\n            </svg>\r\n          </button>\r\n          <p class=\"content-spotlight--overview-date\">Release Date: ${initialContent.releaseDate}</p>\r\n          <div class=\"content-spotlight--overview-genres\">\r\n            <p>Genres: &nbsp;</p>\r\n            ${initialContent.genres\r\n              .map((genre, index) => {\r\n                return index === initialContent.genres.length - 1\r\n                  ? `<p class=\"content-spotlight--overview-genre\">${genre}</p>`\r\n                  : `<p class=\"content-spotlight--overview-genre\">${genre}, &nbsp;</p>`;\r\n              })\r\n              .join(\"\")}\r\n          </div>\r\n          <p class=\"content-spotlight--overview-description\">${initialContent.description}</p>\r\n        </div>\r\n      `\r\n    );\r\n  }\r\n\r\n  initHandlers() {\r\n    this.addOnReadBtnClickedHandler();\r\n    this.addOnOverviewBackBtnClickedHandler();\r\n    this.addOnClippedTitleAnimDoneHandler();\r\n    this.addOnSpotlightBtnClickedHandler();\r\n    this.addOnArrowKeyClickedHandler();\r\n    this.addOnMarkerClickedHandler();\r\n  }\r\n\r\n  // TODO: Maybe needed in the future if the spotlight is dynamically changed while on the website\r\n  //       and spotlightContent needs to be updated so the handlers can use the right data. Maybe\r\n  //       should be a handler, waiting for the signal that the spotlight content has been updated\r\n  reassignSpotlightContent() {}\r\n\r\n  /**\r\n   * Makes the title transition towards the default position after clipped animation\r\n   */\r\n  addOnClippedTitleAnimDoneHandler() {\r\n    this.#spotlightOverviewTitle.addEventListener(\"clippedTitleAnimDone\", function () {\r\n      this.style.left = \"-0.5%\";\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Makes the title and text in the spotlight invisible, moves the overview into the window upon clicking the 'read\r\n   * description' container, and animates the overview title if clipped\r\n   */\r\n  addOnReadBtnClickedHandler() {\r\n    document.querySelectorAll(\".content-spotlight--more-container\").forEach((container) => {\r\n      container.addEventListener(\"click\", () => {\r\n        this.#toggleBackgroundText(true);\r\n\r\n        this.#spotlightOverview.style.transform = \"translateX(0%)\";\r\n\r\n        // Animates the overview title if clipped and dispatches a custom event after the animation to trigger the\r\n        // event handler defined above\r\n        this.#animateClippedTitle();\r\n      });\r\n    });\r\n  }\r\n\r\n  #animateClippedTitle() {\r\n    if (this.#spotlightOverviewTitleClipCntr.offsetWidth >= this.#spotlightOverviewTitleClipCntr.scrollWidth) return;\r\n\r\n    const transitionDuration = Math.ceil(\r\n      this.#spotlightOverviewTitleClipCntr.scrollWidth / SO_CTITLE_TRANS_DURATION_RATIO\r\n    );\r\n\r\n    this.#spotlightOverviewTitle.style.transitionDuration = `${transitionDuration}s`;\r\n\r\n    const textWidth = this.#calcTitleWidth();\r\n    const leftOver = ((textWidth - SO_TITLE_MAX_WIDTH) / SO_TITLE_MAX_WIDTH) * 100;\r\n\r\n    this.#spotlightOverviewTitle.style.left = `-${leftOver}%`;\r\n    this.#clippedTitleAnimId = setTimeout(\r\n      () => this.#spotlightOverviewTitle.dispatchEvent(this.#CustomEventClippedTitleAnimDone),\r\n      `${transitionDuration * 1000 + SO_CTITLE_TRANS_DELAY_OFFSET}`\r\n    );\r\n  }\r\n\r\n  #calcTitleWidth() {\r\n    this.#spotlightOverviewTitle.style.minWidth = \"max-content\";\r\n    const width = this.#spotlightOverviewTitle.offsetWidth;\r\n    this.#spotlightOverviewTitle.style.minWidth = \"\";\r\n\r\n    return width;\r\n  }\r\n\r\n  /**\r\n   * Makes the spotlight title and text visible, moves the overview out of the window upon clicking the back button\r\n   * in the overview, and resets the position of the title (for the case of clipped title animation)\r\n   */\r\n  addOnOverviewBackBtnClickedHandler() {\r\n    document.querySelector(\".content-spotlight--overview-back-btn\").addEventListener(\"click\", () => {\r\n      this.#toggleBackgroundText(false);\r\n\r\n      this.#spotlightOverview.style.transform = \"translateX(-100%)\";\r\n\r\n      this.#resetTitle();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Makes the title and text in the spotlight visible, moves the overview out of the window, changes the\r\n   * overview content, and resets the position of the title (for the case of clipped title animation) upon clicking\r\n   * any spotlight transition button\r\n   *\r\n   * TODO: --> (BUG) Background title doesn't appear during transition\r\n   */\r\n  addOnSpotlightBtnClickedHandler() {\r\n    document.querySelectorAll(\".content-spotlight--btn\").forEach((button) => {\r\n      button.addEventListener(\"click\", () => {\r\n        this.#resetSpotlightAndOverview();\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Similar functionality to this.addOnSpotlightBtnClickedHandler() but upon clicking the left and right arrow keys\r\n   */\r\n  addOnArrowKeyClickedHandler() {\r\n    document.addEventListener(\"keydown\", () => {\r\n      this.#resetSpotlightAndOverview();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Similar functionality to this.addOnSpotlightBtnClickedHandler() but upon clicking a marker\r\n   */\r\n  addOnMarkerClickedHandler() {\r\n    document.querySelector(\".content-spotlight--markers\").addEventListener(\"click\", (e) => {\r\n      this.#resetSpotlightAndOverview();\r\n    });\r\n  }\r\n\r\n  #resetSpotlightAndOverview() {\r\n    this.#toggleBackgroundText(false);\r\n\r\n    this.#spotlightOverview.style.transform = \"translateX(-100%)\";\r\n\r\n    this.#resetTitle();\r\n\r\n    // Changes overview content after 0.5 seconds to avoid visible changes during transition\r\n    // Note: Must be < ~1 second to avoid not triggering the animation for clipped titles in the overview since the\r\n    //       trigger is dependent on the new slide content\r\n    setTimeout(() => {\r\n      this.#changeOverview();\r\n    }, 500);\r\n  }\r\n\r\n  #toggleBackgroundText(toggleFlag) {\r\n    document.querySelector(\r\n      `.content-spotlight--main-content[style=\"transform: translateX(0%);\"] .content-spotlight--text-container`\r\n    ).style.opacity = toggleFlag ? \"0\" : \"\";\r\n  }\r\n\r\n  #resetTitle() {\r\n    // Note: Must execute to avoid animating the title to default position while already at the default position,\r\n    //       which causes either a slight jitter or a clipped title to not animate (since it's stuck at the\r\n    //       default position)\r\n    clearTimeout(this.#clippedTitleAnimId);\r\n\r\n    // Note: Must execute code below (i.e. transition = 'none') to avoid not moving clipped titles immediately to\r\n    //       the default position because the duration property is always set for clipped titles\r\n    this.#spotlightOverviewTitle.style.transition = \"none\";\r\n    this.#spotlightOverviewTitle.style.left = \"-0.5%\";\r\n\r\n    // Note: Must execute after some time to avoid conflict between transition = 'none' and transition = '...'\r\n    setTimeout(() => {\r\n      this.#spotlightOverviewTitle.style.transitionProperty = \"left\";\r\n      this.#spotlightOverviewTitle.style.transitionDelay = \"1.5s\";\r\n      this.#spotlightOverviewTitle.style.transitionTimingFunction = \"cubic-bezier(1, 1, 1, 1)\";\r\n    }, 100);\r\n  }\r\n\r\n  #changeOverview() {\r\n    let currentSlide = this.#getCurrentSlide();\r\n    const currentContent = this.#spotlightContent[currentSlide];\r\n\r\n    this.#changeOverviewElements(currentContent);\r\n\r\n    this.#spotlightOverviewRating.style.backgroundColor = this.#getNewRatingColor(\r\n      Number(this.#spotlightOverviewRating.textContent)\r\n    );\r\n  }\r\n\r\n  #getCurrentSlide() {\r\n    let ret = 0;\r\n\r\n    document.querySelectorAll(\".content-spotlight--marker\").forEach((marker) => {\r\n      if (marker.classList.contains(\"content-spotlight--marker-active\")) ret = marker.dataset.slide;\r\n    });\r\n\r\n    return ret;\r\n  }\r\n\r\n  #changeOverviewElements(currentContent) {\r\n    this.#spotlightOverviewTitle.textContent = currentContent.title;\r\n    this.#spotlightOverviewRating.textContent = currentContent.rating;\r\n    this.#spotlightOverviewReleaseDate.textContent = `Release Date: ${currentContent.releaseDate}`;\r\n    this.#spotlightOverviewGenres.innerHTML = \"\";\r\n    this.#spotlightOverviewGenres.innerHTML = `\r\n      <p>Genres: &nbsp;</p>\r\n      ${currentContent.genres\r\n        .map((genre, index) => {\r\n          return index === currentContent.genres.length - 1\r\n            ? `<p class=\"content-spotlight--overview-genre\">${genre}</p>`\r\n            : `<p class=\"content-spotlight--overview-genre\">${genre}, &nbsp;</p>`;\r\n        })\r\n        .join(\"\")}\r\n    `;\r\n    this.#spotlightOverviewDesc.textContent = currentContent.description;\r\n  }\r\n\r\n  #getNewRatingColor(rating) {\r\n    if (rating >= 9.0) return \"var(--c-rating-best)\";\r\n    else if (rating >= 8.0) return \"var(--c-rating-good)\";\r\n    else if (rating >= 7.0) return \"var(--c-rating-okay)\";\r\n    else if (rating >= 6.0) return \"var(--c-rating-bad)\";\r\n    else return \"var(--c-rating-worst)\";\r\n  }\r\n}\r\n\r\nexport default new SpotlightOverviewView();\r\n"],"names":["$ba30e20475feac5a$export$8eb3892b442747bd","method","headers","accept","Authorization","$ba30e20475feac5a$export$ca6dda5263526f75","$ba30e20475feac5a$export$a1cb696860e96a96","$0f1d4402dffacf5b$export$ca000e230c0caa3e","movieGenresInfo","tvsGenresInfo","mostPopularMoviesInfo","movieSpotlightInfo","topRatedMoviesInfo","moviesByGenreInfo","movieTracksInfo","$0f1d4402dffacf5b$export$d5d584b681d631b7","movieGenresId","movieGenresStr","counter","every","movieGenre","some","genreId","id","push","name","length","$0f1d4402dffacf5b$export$1e0dc2f81cf0c7c8","genreStr","toLowerCase","$0f1d4402dffacf5b$var$getMoviesByGenreURL","concat","$0f1d4402dffacf5b$export$8bebce24411c8fc2","response","fetch","genres","json","err","console","error","$0f1d4402dffacf5b$export$4e904f350c2cabd","page","mostPopularMovies","results","$0f1d4402dffacf5b$export$1ec647452c5fd561","topRatedMovies","$0f1d4402dffacf5b$export$e4bb840dce7a48f9","Promise","all","moviesByGenre","forEach","result","index","movies","$0f1d4402dffacf5b$export$45dbabef412e43eb","i","entry","title","releaseDate","release_date","genre_ids","description","overview","rating","vote_average","backdropPath","backdrop_path","$0f1d4402dffacf5b$export$54e5b5bd39b67989","slice","$0d13d069d85dae3d$var$SearchBarView","searchContainer","document","querySelector","searchBar","searchBarBtn","initHandlers","addSearchHandler","addSearchBarHandler","addEventListener","e","preventDefault","log","value","changeSearchBarStyle","bind","flag","style","width","padding","$0d13d069d85dae3d$export$2e2bcd8739ae039","$854894b32fbd3b72$export$2e2bcd8739ae039","spotlightContent","slider","initVars","initDefaultState","content","insertAdjacentHTML","$a9545333b1580a57$export$2e2bcd8739ae039","spotlightBtn","sliderElements","sliderMaxElements","currentSlide","markerContainer","querySelectorAll","initMarkers","activateMarkers","transitionNextSlide","_","addTransitionByBtnHandler","addTransitionByKeyHandler","addTransitionByMarkerHandler","addBtnHoverShadowHandler","button","currentTarget","classList","contains","prevSlide","nextSlide","key","target","slide","dataset","remove","add","Number","transform","addBtnHoverShadow","$d2959fcb8db144c0$export$2e2bcd8739ae039","spotlightOverview","spotlightOverviewTitleClipCntr","spotlightOverviewTitle","spotlightOverviewRating","spotlightOverviewReleaseDate","spotlightOverviewGenres","spotlightOverviewDesc","CustomEventClippedTitleAnimDone","clippedTitleAnimId","Event","initialContent","getNewRatingColor","map","genre","join","addOnReadBtnClickedHandler","addOnOverviewBackBtnClickedHandler","addOnClippedTitleAnimDoneHandler","addOnSpotlightBtnClickedHandler","addOnArrowKeyClickedHandler","addOnMarkerClickedHandler","reassignSpotlightContent","left","container","toggleBackgroundText","animateClippedTitle","offsetWidth","scrollWidth","transitionDuration","Math","ceil","textWidth","calcTitleWidth","setTimeout","dispatchEvent","minWidth","resetTitle","resetSpotlightAndOverview","changeOverview","toggleFlag","opacity","clearTimeout","transition","transitionProperty","transitionDelay","transitionTimingFunction","getCurrentSlide","currentContent","changeOverviewElements","backgroundColor","textContent","ret","marker","innerHTML","$f50bd1f2915ed0f2$var$controlMovieDefaultState","$f50bd1f2915ed0f2$var$controlMovieSpotlight","$f50bd1f2915ed0f2$var$controlMovieTracks","$f50bd1f2915ed0f2$var$movieInit"],"version":3,"file":"index.be711b4c.js.map"}